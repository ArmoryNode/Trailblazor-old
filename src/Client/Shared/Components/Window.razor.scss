@import "../../Styles/_all";

$window-color: $grey;

.tb-window-modal-overlay {
    position: fixed;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba($black, 0.4);
    z-index: 99;
}

.tb-window {
    box-sizing: border-box;
    position: absolute;
    display: flex;
    flex-flow: column nowrap;
    background-color: $dark-grey;
    border-radius: $border-radius;
    z-index: 100;
    @include medium-elevation($black);

    *, *::before, *::after {
        box-sizing: border-box;
    }

    .tb-window-resize-handles {
        position: absolute;
        left: 0;
        top: 0;
        width: inherit;
        height: inherit;
        user-select: none;
        pointer-events: none;

        $handle-width: 6px;

        $corner-length: 30px;
        $corner-length-half: calc($corner-length / 2);

        $sides: ('left', 'right', 'top', 'bottom');
        $corners: ('top-left', 'top-right', 'bottom-left', 'bottom-right');

        @each $side in $sides {
            .tb-window-resize-handle-#{$side} {
                position: absolute;
                pointer-events: auto;

                &::before {
                    content: '';
                    position: absolute;
                    left: 0;
                    top: 0;
                    height: 100%;
                    width: 100%;
                    background-color: $off-white;
                    opacity: 0;

                    @include transition-for(opacity);
                }

                &:active::before {
                    opacity: 0.2;
                }
            }
        }

        .tb-window-resize-handle-left,
        .tb-window-resize-handle-right {
            top: $corner-length-half;
            width: $handle-width;
            height: calc(100% - $corner-length);
            cursor: ew-resize;
        }

        .tb-window-resize-handle-top,
        .tb-window-resize-handle-bottom {
            left: $corner-length-half;
            height: $handle-width;
            width: calc(100% - $corner-length);
            cursor: ns-resize;
        }

        @each $side in $sides {
            .tb-window-resize-handle-#{$side} {
                #{$side}: 0;
            }
        }

        @each $corner in $corners {
            .tb-window-resize-handle-#{$corner} {
                position: absolute;
                pointer-events: auto;
                width: calc($handle-width * 2);
                height: calc($handle-width * 2);

                &::before {
                    content: '';
                    position: absolute;
                    left: 0;
                    top: 0;
                    width: 100%;
                    height: 100%;
                    border-color: $off-white;
                    border-style: solid;
                    border-width: $handle-width;
                    opacity: 0;

                    @include transition-for(opacity);
                }

                &:active::before {
                    opacity: 0.2;
                }
            }
        }

        .tb-window-resize-handle-top-left,
        .tb-window-resize-handle-bottom-left {
            left: 0;
        }

        .tb-window-resize-handle-top-right,
        .tb-window-resize-handle-bottom-right {
            right: 0;

            &::before {
                border-top-right-radius: $border-radius;
                border-bottom-right-radius: $border-radius;
                border-left-color: transparent;
            }
        }

        .tb-window-resize-handle-top-left,
        .tb-window-resize-handle-top-right {
            top: 0;
        }

        .tb-window-resize-handle-bottom-left,
        .tb-window-resize-handle-bottom-right {
            bottom: 0;
        }

        .tb-window-resize-handle-top-left,
        .tb-window-resize-handle-bottom-right {
            cursor: nwse-resize;
        }

        .tb-window-resize-handle-bottom-left,
        .tb-window-resize-handle-top-right {
            cursor: nesw-resize;
        }

        .tb-window-resize-handle-top-left::before {
            border-top-left-radius: $border-radius;
            border-right-color: transparent;
            border-bottom-color: transparent;
        }

        .tb-window-resize-handle-top-right::before {
            border-top-right-radius: $border-radius;
            border-left-color: transparent;
            border-bottom-color: transparent;
        }

        .tb-window-resize-handle-bottom-left::before {
            border-bottom-left-radius: $border-radius;
            border-right-color: transparent;
            border-top-color: transparent;
        }

        .tb-window-resize-handle-bottom-right::before {
            border-bottom-right-radius: $border-radius;
            border-left-color: transparent;
            border-top-color: transparent;
        }
    }

    .tb-window-topbar {
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        padding: 6px 16px 6px 16px;
        background-color: $grey;
        min-height: 36px;
        border-top-left-radius: $border-radius;
        border-top-right-radius: $border-radius;

        &.tb-dragging {
            cursor: move;
        }

        .tb-window-title, .tb-window-controls {
            height: 100%;
        }

        .tb-window-title {
            font-size: 24px;
            width: 100%;
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
        }

        .tb-window-controls {
            display: flex;
            flex-flow: row nowrap;
            /*max-width: 80px;*/

            .tb-window-close {
                display: flex;
                margin-left: auto;
                cursor: pointer;

                > i {
                    margin: auto;
                }
            }
        }
    }

    .tb-window-content {
        flex-grow: 1;
    }
}
